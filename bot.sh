#!/bin/bash
# ============================================================================
# MEXC Signal Bot - Management Script
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# ============================================================================

set -e

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
SERVICE_NAME="mexc-bot"
BOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
VENV_PATH="$BOT_DIR/.venv"
PYTHON="$VENV_PATH/bin/python"
LOG_FILE="$BOT_DIR/logs/bot.log"

# –§—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–∞
print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_header() {
    echo -e "\n${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ systemd
check_systemd() {
    if ! systemctl --user list-units | grep -q "$SERVICE_NAME"; then
        return 1
    fi
    return 0
}

# –§—É–Ω–∫—Ü–∏—è: –°—Ç–∞—Ç—É—Å
status() {
    print_header "üìä –°–¢–ê–¢–£–° –ë–û–¢–ê"
    
    if check_systemd; then
        systemctl --user status "$SERVICE_NAME" --no-pager || true
    else
        print_warning "Systemd service –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        print_info "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./bot.sh install"
    fi
}

# –§—É–Ω–∫—Ü–∏—è: –ó–∞–ø—É—Å–∫
start() {
    print_header "üöÄ –ó–ê–ü–£–°–ö –ë–û–¢–ê"
    
    if check_systemd; then
        systemctl --user start "$SERVICE_NAME"
        sleep 2
        if systemctl --user is-active --quiet "$SERVICE_NAME"; then
            print_success "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!"
            print_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: ./bot.sh logs"
        else
            print_error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞!"
            print_info "–°–º–æ—Ç—Ä–∏—Ç–µ –æ—à–∏–±–∫–∏: ./bot.sh logs"
        fi
    else
        print_info "–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
        cd "$BOT_DIR"
        "$PYTHON" run_hybrid.py
    fi
}

# –§—É–Ω–∫—Ü–∏—è: –û—Å—Ç–∞–Ω–æ–≤–∫–∞
stop() {
    print_header "üõë –û–°–¢–ê–ù–û–í–ö–ê –ë–û–¢–ê"
    
    if check_systemd; then
        systemctl --user stop "$SERVICE_NAME"
        sleep 1
        print_success "–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    else
        print_warning "Systemd service –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        print_info "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –≤—Ä—É—á–Ω—É—é (Ctrl+C)"
    fi
}

# –§—É–Ω–∫—Ü–∏—è: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫
restart() {
    print_header "üîÑ –ü–ï–†–ï–ó–ê–ü–£–°–ö –ë–û–¢–ê"
    
    if check_systemd; then
        systemctl --user restart "$SERVICE_NAME"
        sleep 2
        if systemctl --user is-active --quiet "$SERVICE_NAME"; then
            print_success "–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"
        else
            print_error "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞!"
        fi
    else
        print_error "Systemd service –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è: –õ–æ–≥–∏
logs() {
    print_header "üìÑ –õ–û–ì–ò –ë–û–¢–ê"
    
    if check_systemd; then
        print_info "–õ–æ–≥–∏ systemd (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):"
        echo ""
        journalctl --user -u "$SERVICE_NAME" -n 50 --no-pager
        echo ""
        print_info "–î–ª—è live –ª–æ–≥–æ–≤: journalctl --user -u $SERVICE_NAME -f"
    else
        if [ -f "$LOG_FILE" ]; then
            print_info "–õ–æ–≥–∏ —Ñ–∞–π–ª–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):"
            echo ""
            tail -n 50 "$LOG_FILE"
        else
            print_warning "–§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOG_FILE"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è: Live –ª–æ–≥–∏
logs_live() {
    print_header "üì° LIVE –õ–û–ì–ò"
    
    if check_systemd; then
        print_info "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞"
        echo ""
        journalctl --user -u "$SERVICE_NAME" -f
    else
        if [ -f "$LOG_FILE" ]; then
            print_info "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞"
            echo ""
            tail -f "$LOG_FILE"
        else
            print_error "–§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ systemd service
install() {
    print_header "üì¶ –£–°–¢–ê–ù–û–í–ö–ê SYSTEMD SERVICE"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env
    if [ ! -f "$BOT_DIR/.env" ]; then
        print_error ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        print_info "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [ ! -d "$VENV_PATH" ]; then
        print_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"
        print_info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: poetry install"
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ systemd service —Ñ–∞–π–ª–∞
    SERVICE_FILE="$HOME/.config/systemd/user/$SERVICE_NAME.service"
    mkdir -p "$HOME/.config/systemd/user"
    
    cat > "$SERVICE_FILE" << EOF
[Unit]
Description=MEXC Signal Bot - Crypto Trading Signals
After=network.target network-online.target
Wants=network-online.target

[Service]
Type=simple
WorkingDirectory=$BOT_DIR
Environment="PATH=$VENV_PATH/bin:/usr/local/bin:/usr/bin:/bin"
ExecStart=$PYTHON $BOT_DIR/run_hybrid.py

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
Restart=always
RestartSec=10

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
MemoryMax=2G
CPUQuota=80%

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
StandardOutput=journal
StandardError=journal
SyslogIdentifier=mexc-bot

# Security
NoNewPrivileges=true
PrivateTmp=true

[Install]
WantedBy=default.target
EOF
    
    print_success "Service —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: $SERVICE_FILE"
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd
    systemctl --user daemon-reload
    print_success "Systemd daemon –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω"
    
    # –í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
    systemctl --user enable "$SERVICE_NAME"
    print_success "–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –≤–∫–ª—é—á—ë–Ω"
    
    echo ""
    print_success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    print_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: ./bot.sh start"
}

# –§—É–Ω–∫—Ü–∏—è: –£–¥–∞–ª–µ–Ω–∏–µ service
uninstall() {
    print_header "üóëÔ∏è  –£–î–ê–õ–ï–ù–ò–ï SYSTEMD SERVICE"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞
    if check_systemd; then
        systemctl --user stop "$SERVICE_NAME" 2>/dev/null || true
        systemctl --user disable "$SERVICE_NAME" 2>/dev/null || true
    fi
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    SERVICE_FILE="$HOME/.config/systemd/user/$SERVICE_NAME.service"
    if [ -f "$SERVICE_FILE" ]; then
        rm -f "$SERVICE_FILE"
        systemctl --user daemon-reload
        print_success "Service —É–¥–∞–ª—ë–Ω"
    else
        print_warning "Service —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
check() {
    print_header "üîç –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò"
    
    cd "$BOT_DIR"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    if [ -f "$PYTHON" ]; then
        print_success "Python: $($PYTHON --version)"
    else
        print_error "Python –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ venv!"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env
    if [ -f ".env" ]; then
        print_success ".env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω"
    else
        print_error ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫..."
    "$PYTHON" config/settings.py
    
    echo ""
    print_success "–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!"
}

# –§—É–Ω–∫—Ü–∏—è: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤
update_symbols() {
    print_header "üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ü–ò–°–ö–ê –°–ò–ú–í–û–õ–û–í"
    
    cd "$BOT_DIR"
    "$PYTHON" tools/update_symbols.py
    
    if [ -f "data/symbols_usdt.txt" ]; then
        SYMBOLS_COUNT=$(wc -l < data/symbols_usdt.txt)
        print_success "–û–±–Ω–æ–≤–ª–µ–Ω–æ $SYMBOLS_COUNT USDT –ø–∞—Ä"
    fi
}

# –§—É–Ω–∫—Ü–∏—è: –ü–æ–º–æ—â—å
help() {
    cat << EOF

${BLUE}MEXC Signal Bot - Management Script${NC}

${YELLOW}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:${NC}
    ./bot.sh [command]

${YELLOW}–ö–æ–º–∞–Ω–¥—ã:${NC}
    ${GREEN}start${NC}           –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
    ${GREEN}stop${NC}            –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞
    ${GREEN}restart${NC}         –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
    ${GREEN}status${NC}          –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
    ${GREEN}logs${NC}            –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
    ${GREEN}logs-live${NC}       Live –ª–æ–≥–∏ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)
    
    ${GREEN}install${NC}         –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å systemd service
    ${GREEN}uninstall${NC}       –£–¥–∞–ª–∏—Ç—å systemd service
    
    ${GREEN}check${NC}           –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    ${GREEN}update-symbols${NC}  –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ USDT –ø–∞—Ä
    
    ${GREEN}help${NC}            –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

${YELLOW}–ü—Ä–∏–º–µ—Ä—ã:${NC}
    ./bot.sh start              # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
    ./bot.sh logs-live          # –°–º–æ—Ç—Ä–µ—Ç—å live –ª–æ–≥–∏
    ./bot.sh check              # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

${YELLOW}–õ–æ–≥–∏:${NC}
    Systemd: journalctl --user -u mexc-bot -f
    –§–∞–π–ª: tail -f logs/bot.log

EOF
}

# ============================================================================
# MAIN
# ============================================================================

case "${1:-help}" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    status)
        status
        ;;
    logs)
        logs
        ;;
    logs-live|live)
        logs_live
        ;;
    install)
        install
        ;;
    uninstall)
        uninstall
        ;;
    check)
        check
        ;;
    update-symbols)
        update_symbols
        ;;
    help|--help|-h)
        help
        ;;
    *)
        print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        echo ""
        help
        exit 1
        ;;
esac
