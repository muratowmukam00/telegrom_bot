import asyncio
import numpy as np
from config.settings import TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID
from bot.services import TelegramService
from bot.utils import ChartGenerator

async def send_test_signal():
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª —Å –≥—Ä–∞—Ñ–∏–∫–æ–º –≤ Telegram"""
    
    print("–°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª...")
    
    # –°–æ–∑–¥–∞—ë–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏–º–∏—Ç–∏—Ä—É–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã)
    np.random.seed(42)
    base_price = 100
    prices_5m = []
    
    # –°–æ–∑–¥–∞—ë–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω—ã (—Å–ª—É—á–∞–π–Ω–æ–µ –±–ª—É–∂–¥–∞–Ω–∏–µ)
    for i in range(144):  # 144 * 5 –º–∏–Ω—É—Ç = 12 —á–∞—Å–æ–≤
        change = np.random.normal(0, 0.5)  # –°–ª—É—á–∞–π–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
        base_price += change
        prices_5m.append(base_price)
    
    # –°–æ–∑–¥–∞—ë–º –æ–±—ä—ë–º—ã —Ç–æ—Ä–≥–æ–≤–ª–∏
    volumes_5m = [1000000 + np.random.randint(-300000, 500000) for _ in range(144)]
    
    symbol = "TEST_USDT"
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏–∫
    print(f"–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏–∫ –¥–ª—è {symbol}...")
    chart_path = ChartGenerator.generate_signal_chart(
        symbol,
        prices_5m,
        volumes_5m,
        output_path=f"logs/{symbol}_test.png"
    )
    print(f"–ì—Ä–∞—Ñ–∏–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {chart_path}")
    
    # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
    analysis = {
        'signal_triggered': True,
        'filter_1_price': (True, 8.5),      # –¶–µ–Ω–∞ –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ 8.5%
        'filter_2_rsi_1h': (True, 72.3),    # RSI 1h = 72.3 (–ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–æ)
        'filter_3_rsi_15m': (True, 75.8),   # RSI 15m = 75.8 (–ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–æ)
    }
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –≤ Telegram
    print("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –≤ Telegram...")
    telegram = TelegramService(TELEGRAM_BOT_TOKEN)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–ª–µ—Ä—Ç
    result1 = await telegram.send_signal_alert(
        TELEGRAM_CHAT_ID,
        symbol,
        analysis
    )
    
    if result1:
        print("‚úÖ –ê–ª–µ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª–µ—Ä—Ç–∞")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫
    await asyncio.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
    result2 = await telegram.send_photo(
        TELEGRAM_CHAT_ID,
        chart_path,
        caption=f"üìä –¢–µ—Å—Ç–æ–≤—ã–π –≥—Ä–∞—Ñ–∏–∫ {symbol} (5m, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12—á)"
    )
    
    if result2:
        print("‚úÖ –ì—Ä–∞—Ñ–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞")
    
    await telegram.close()
    
    print("\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!")
    print(f"   –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á–∞—Ç!")

if __name__ == "__main__":
    asyncio.run(send_test_signal())
